stages:
  - build
  - test
  - deploy
  - release

build:
  stage: build
  image: node:20-alpine
  script:
    - npm ci
    - npm run build
  artifacts:
    paths:
      - out/
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'

test:
  stage: test
  image: node:20-alpine
  script:
    - npm ci
    - npm test
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'

deploy:
  stage: deploy
  image: alpine:latest
  environment:
    name: production
    url: https://msb.dgm.hu
  before_script:
    - apk add --no-cache openssh
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $DEPLOY_HOST >> ~/.ssh/known_hosts
  script:
    - scp -r out/* $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
  rules:
    - if: $CI_COMMIT_BRANCH == 'main'

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "Creating GitLab Release for tag $CI_COMMIT_TAG"
    - release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG --description "Automated release for tag $CI_COMMIT_TAG"
  rules:
    - if: $CI_COMMIT_TAG
